package Client;

import Service.*;
import java.net.Socket;
import Entity.*;
import java.util.ArrayList;
import java.util.List;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;

public class ChatFrame extends javax.swing.JFrame {

    Socket _socket;
    private List<Message> _lstMessages;
    BufferedReader _in;
    PrintWriter _out;
    String sender;
    String recipient;
    String userNameRecieve;
    ClientService _service;
    LoginFrame _mainFrame;
    public ChatFrame(LoginFrame login, String sender, String recipient, String userNameRecieve) {
            initComponents();
            this.recipient = recipient;
            txp_dialogue.setFocusable(false);
            _lstMessages = new ArrayList<>();
            this._mainFrame = login;
            this.sender = sender;
            this.userNameRecieve = userNameRecieve;
            _out = login.getS().getOut();
            lbl_recipient.setText(this.userNameRecieve);
            this.setDefaultCloseOperation(HIDE_ON_CLOSE);
            this.setResizable(false);
            this.setLocationRelativeTo(null);
            this.setSize(705, 570);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_recipient = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txp_dialogue = new javax.swing.JTextPane();
        txt_message = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_recipient.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lbl_recipient.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lbl_recipient, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 370, 50));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 180, 30));

        txp_dialogue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(txp_dialogue);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 630, 340));

        txt_message.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(txt_message, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 520, 40));

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 480, 90, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        _out.println("send " + txt_message.getText() + "," + sender + "," + recipient);
        _out.flush();
        _out.println("getDialogue " + sender + " " + recipient);
        _out.flush();
        txt_message.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_recipient;
    private javax.swing.JTextPane txp_dialogue;
    private javax.swing.JTextField txt_message;
    // End of variables declaration//GEN-END:variables

    public void getLstMessage(String feedBack) {
        feedBack = feedBack.substring(0, feedBack.lastIndexOf(";"));
        feedBack = feedBack.substring(feedBack.indexOf(" ") + 1);
        _lstMessages.clear();
        String[] mess = feedBack.split(";");
        for (String mes : mess) {
            String[] infor = mes.split(",");
            _lstMessages.add(new Message(infor[2], infor[3], infor[0], infor[1]));
        }
        if (!_lstMessages.isEmpty()) {
            String dateSend = _lstMessages.get(0).getDateSend().substring(0, _lstMessages.get(0).getDateSend().indexOf(" "));;
            txp_dialogue.setText("");
            txp_dialogue.setText("               " + dateSend);
            for (Message message : _lstMessages) {
                String time = message.getDateSend().substring(message.getDateSend().indexOf(" ") + 1, message.getDateSend().indexOf(" ") + 9);
                if (message.getDateSend().contains(dateSend)) {
                    if (message.getSenderName().equals(this.sender)) {
                        txp_dialogue.setText(txp_dialogue.getText() + "\n" + (time + "-" + "You: " + message.getContent()));
                    } else {
                        txp_dialogue.setText(txp_dialogue.getText() + "\n" + (time + "-" + userNameRecieve + ": " + message.getContent()));
                    }
                } else {
                    dateSend = message.getDateSend().substring(0, 11);
                    txp_dialogue.setText(txp_dialogue.getText() + "\n" + "               " + dateSend);
                    if (message.getSenderName().equals(this.sender)) {
                        txp_dialogue.setText(txp_dialogue.getText() + "\n" + (time + "-" + "You: " + message.getContent()));
                    } else {
                        txp_dialogue.setText(txp_dialogue.getText() + "\n" + (time + "-" + userNameRecieve + ": " + message.getContent()));
                    }
                }
            }
        }
    }

    public String getSender() {
        return sender;
    }

    public void setSender(String sender) {
        this.sender = sender;
    }

    public String getRecipient() {
        return recipient;
    }

    public void setRecipient(String recipient) {
        this.recipient = recipient;
    }
}
