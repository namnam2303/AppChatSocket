package Client;

import Service.*;
import java.io.IOException;
import java.net.Socket;
import java.util.Random;
import javax.swing.JOptionPane;

public class LoginFrame extends javax.swing.JFrame {

    private Socket socket;
    private ClientService _service;
    private Utilites _utilities;
    private Thread thread;
    private ForgetPassFrame forgetPassW;
    private boolean isConnected;
    private ClientFrame clientFrame;
    private ChatFrame chatFrame;

    public LoginFrame() {
        try {
            socket = new Socket("192.168.18.104", 6666);
            if (socket != null) {
                isConnected = true;
                connect();
            }
        } catch (IOException ex) {
        }
        _utilities = new Utilites();
        initComponents();

        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setSize(644, 351);
    }

    public void connect() {
        _service = new ClientService(socket, "client" + generateName()) {
            @Override
            public void run() {
                try {
                    while (socket.isConnected()) {
                        String feedback = this.getIn().readLine();
                        String clientName = feedback.substring(feedback.lastIndexOf(" ") + 1);
                        if (clientName.compareTo(_service.getName()) == 0) {
                            processFeedback(feedback);
                        }
                    }
                    this.getSocket().close();
                } catch (Exception ex) {
                    this.closeEverything();
                }
            }

        };
        thread = new Thread(_service);
        thread.start();

    }

    public String transferFeedBack(String feedback) {
        return feedback;
    }

    public ClientService getS() {
        return _service;
    }

    public void processFeedback(String feedback) {
        if (feedback.startsWith("loginOK")) {
            String ar[] = feedback.split("\\s");
            String newName = ar[1];
            _service.setName(newName);
            _service.setIsValidUser(true);
            this.dispose();
            clientFrame = new ClientFrame(this);
            clientFrame.setVisible(true);
            JOptionPane.showMessageDialog(this, "Login succesfully");
        }
        if (feedback.startsWith("Dialogue")) {
           int x = 3;
           while(x-- > 0) clientFrame.loadMessage(feedback);
        }
        if (feedback.startsWith("loginNotOk")) {
            JOptionPane.showMessageDialog(this, "Username or password is incorrect!");
        } else if (feedback.startsWith("PSchanged")) {
            JOptionPane.showMessageDialog(this, "The password has changed!");
            forgetPassW.resetText();
            forgetPassW.setVisible(false);
        } else if (feedback.startsWith("NoUser")) {
            JOptionPane.showMessageDialog(this, "There is no user has this name!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_userName = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_passWord = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Log in");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 210, 50));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("PassWord:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 80, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("UserName:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 80, 30));
        getContentPane().add(txt_userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 360, 40));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Sign In");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 260, 110, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Forgot password?");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 210, 110, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText("Sign Up here");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 90, 30));
        getContentPane().add(txt_passWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 360, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (ClientService.lstSocket.size() > 0 && isConnected && socket != null && socket.isConnected()) {
            if (txt_passWord.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Password is empty!");
            } else if (txt_userName.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Username is empty!");
            } else if (!_utilities.checkWords(txt_userName.getText())) {
                JOptionPane.showMessageDialog(this, "Invalid username");
            } else if (!_utilities.checkWords(txt_passWord.getText())) {
                JOptionPane.showMessageDialog(this, "Invalid Pass word");
            } else {
                String infor = txt_userName.getText() + " " + txt_passWord.getText();
                _service.sendMessage("login " + infor + " " + _service.getName());
            }
        } else {
            JOptionPane.showMessageDialog(this, "The server is not running!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked

        txt_passWord.setText("");
        txt_userName.setText("");
        if (forgetPassW == null) {
            forgetPassW = new ForgetPassFrame(this);
        }
        forgetPassW.setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField txt_passWord;
    private javax.swing.JTextField txt_userName;
    // End of variables declaration//GEN-END:variables

    private String generateName() {
        Random rand = new Random();
        String name = "";
        while (name.length() < 10) {
            name += rand.nextInt(9);
        }
        return name;
    }

    public ClientFrame getClientFrame() {
        return clientFrame;
    }

    public void setClientFrame(ClientFrame clientFrame) {
        this.clientFrame = clientFrame;
    }

    public ChatFrame getChatFrame() {
        return chatFrame;
    }

    public void setChatFrame(ChatFrame chatFrame) {
        this.chatFrame = chatFrame;
    }

}
